services:
  freshrss:
    image: lscr.io/linuxserver/freshrss:1.24.1
    container_name: freshrss
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ./volumes/freshrss:/config
    ports:
      - 8000:80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 128M
        reservations:
          cpus: 0.25
          memory: 64M

  vaultwarden:
    image: vaultwarden/server:1.31.0
    container_name: vaultwarden
    environment:
      - INVITATIONS_ALLOWED=true
      - PGID=${PGID}
      - PUID=${PUID}
      - SIGNUPS_ALLOWED=false # Activate this with "true", create an account and then set it back to "false"
      - TZ=${TZ}
      - WEBSOCKET_ENABLED=true
    volumes:
      - ./volumes/vaultwarden:/data
    ports:
      - "8100:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 128M
        reservations:
          cpus: 0.25
          memory: 64M

  budge:
    image: lscr.io/linuxserver/budge:0.0.9
    container_name: budge
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ./volumes/budge:/config
    ports:
      - 8200:80
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: 1.0
          memory: 256M
        reservations:
          cpus: 0.5
          memory: 128M

  portainer:
    image: portainer/portainer-ce:2.20.3-alpine
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/portainer:/data
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    ports:
      - "9000:9000"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 128M
        reservations:
          cpus: 0.25
          memory: 64M

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    ports:
      - 9100:3001
    volumes:
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 128M
        reservations:
          cpus: 0.25
          memory: 64M

  dockerproxy:
    image: ghcr.io/tecnativa/docker-socket-proxy:0.2.0
    container_name: dockerproxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - CONTAINERS=1
      - POST=0
    restart: unless-stopped
    healthcheck:
      test: wget --spider http://localhost:2375/version || exit 1
      interval: "29s"
      timeout: "5s"
      retries: 3
      start_period: "21s"
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 128M
        reservations:
          cpus: 0.25
          memory: 64M

  cloudflared:
    image: cloudflare/cloudflared:2024.6.1
    container_name: cloudflared
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 128M
        reservations:
          cpus: 0.25
          memory: 64M

  backups:
    build:
      context: .
      dockerfile: backups.dockerfile
      args:
        - MEGA_SESSION=${MEGA_SESSION}
    container_name: backups
    environment:
      - PGID=${PGID}
      - PUID=${PUID}
      - TZ=${TZ}
    volumes:
      - ./backups:/backups
      - ./volumes:/volumes
      - ./backups-encryption.key:/backups-encryption.key
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: 0.50
          memory: 128M
        reservations:
          cpus: 0.25
          memory: 64M
